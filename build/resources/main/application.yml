spring:
  profiles: prod
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: "jdbc:mysql://idiot-database.c35pvkgak4n8.ap-northeast-2.rds.amazonaws.com:3306/idiot"
    username: idiot
    password: h13001212!
  jpa:
    database-platform: org.hibernate.dialect.MySQL5InnoDBDialect
    properties:
      hibernate:
        format_sql: true
        ddl-auto: update
    generate-ddl: false
    open-in-view: false
    show-sql: true
  output:
    ansi:
      enabled: always
  batch:
    initialize-schema: always #batch 스키마 자동생성
    job:
      enabled: false #시작과 동시에 실행되는 건 방지
  servlet:
    multipart:
      max-file-size: 20MB
      max-request-size: 20MB
cloud:
  aws:
    credentials:
      secret-key: ${s3.secretkey}
      access-key: ${s3.accesskey}
    region:
      static: ${s3.region}
    s3:
      bucket: ${s3.bucket}
    stack:
      auto: false
---
spring:
  profiles: dev
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: "jdbc:mysql://localhost:3306/mysql?serverTimezone=UTC&characterEncoding=UTF-8"
    username: root
    password: P@ssw0rd
  jpa:
    database-platform: org.hibernate.dialect.MySQL5InnoDBDialect
    properties:
      hibernate:
        format_sql: true
        ddl-auto: create
    generate-ddl: false
    open-in-view: false
    show-sql: true
  output:
    ansi:
      enabled: always
  batch:
    initialize-schema: always #batch 스키마 자동생성
    job:
      enabled: false #시작과 동시에 실행되는 건 방지
  servlet:
    multipart:
      max-file-size: 20MB
      max-request-size: 20MB
logging:
  level:
    org.hibernate.type: trace
server:
  port: ${PORT:8080}
  error:
    whitelabel:
      enabled: false

---
spring:
  profiles: local
  datasource:
    driver-class-name: org.h2.Driver
    url: "jdbc:h2:tcp://localhost/~/test"
    username: sa
  jpa:
    database-platform: org.hibernate.dialect.MySQL5InnoDBDialect
    properties:
      hibernate:
        ddl-auto: create
        format_sql: true
    generate-ddl: false
    open-in-view: false
    show-sql: true
  output:
    ansi:
      enabled: always
logging:
  level:
    org.hibernate.type: trace