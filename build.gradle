buildscript{
	ext{
		springBootVersion = '2.1.7.RELEASE'
	}
	repositories{
		mavenCentral()
		maven { url 'https://repo.spring.io/libs-milestone'}
	}
	dependencies{
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

plugins {
	id 'org.springframework.boot' version '2.5.2'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
	id 'java'
	id "io.franzbecker.gradle-lombok" version "3.0.0"
}
group 'com.example'
version '1.0-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}

dependencies {
	annotationProcessor ('org.projectlombok:lombok')

	implementation ('org.projectlombok:lombok')
	implementation('com.sun.mail:javax.mail:1.6.2')

	implementation 'com.querydsl:querydsl-jpa' // (2)

	//Gson
	implementation 'com.google.code.gson:gson:2.9.0'
	implementation('org.springframework.boot:spring-boot-starter-web')
	implementation('org.springframework.boot:spring-boot-starter-security')
	implementation('org.springframework.boot:spring-boot-starter-validation')
	implementation('org.springframework.boot:spring-boot-starter-data-jpa')
	implementation('org.springframework.boot:spring-boot-starter-logging:2.6.7')
	implementation('com.h2database:h2')
	implementation('mysql:mysql-connector-java')
	implementation('io.jsonwebtoken:jjwt-api:0.11.2')
	implementation('io.jsonwebtoken:jjwt-impl:0.11.2')
	implementation('io.jsonwebtoken:jjwt-jackson:0.11.2')
	implementation('org.jsoup:jsoup:1.13.1')
	implementation 'org.springframework.boot:spring-boot-starter-aop'
	implementation('org.postgresql:postgresql')
	implementation 'org.springframework.boot:spring-boot-starter-cache'
	implementation ('org.projectlombok:lombok')

	implementation('io.springfox:springfox-swagger2:2.9.2')
	implementation('io.springfox:springfox-swagger-ui:2.9.2')
	implementation('org.springdoc:springdoc-openapi-ui:1.6.6')

	implementation 'org.springframework.boot:spring-boot-starter-web'

	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation('org.springframework.boot:spring-boot-starter-quartz')
	implementation('org.springframework.boot:spring-boot-starter-web-services')
	implementation('org.springframework.boot:spring-boot-starter-jdbc')
	implementation group: 'org.mariadb.jdbc', name: 'mariadb-java-client', version: '2.4.0'

	// Spring Security
	implementation('org.springframework.boot:spring-boot-starter-oauth2-client')


	// AWS S3
	implementation group: 'org.springframework.cloud', name: 'spring-cloud-aws-core', version: '2.2.6.RELEASE'


	compileOnly('org.projectlombok:lombok')
	runtimeOnly('mysql:mysql-connector-java') //mysql
	runtimeOnly('com.h2database:h2') //h2
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client' // MariaDB

	testImplementation('io.rest-assured:rest-assured:4.4.0')
	testImplementation('org.springframework.boot:spring-boot-starter-test')
	testImplementation('org.springframework.security:spring-security-test')
	testImplementation('org.springframework.batch:spring-batch-test')
	testImplementation 'org.mockito:mockito-junit-jupiter'
}


bootJar{
	archiveBaseName = 'backend'
	archiveFileName = 'backend.jar'
	archiveVersion = "0.0.1"
}
jar {
	enabled = false
}
dependencyManagement {
	imports {
		mavenBom "io.awspring.cloud:spring-cloud-aws-dependencies:2.3.3"
	}
}
def querydslDir = "$buildDir/generated/querydsl" // (3)

querydsl { // (4)
	jpa = true
	querydslSourcesDir = querydslDir
}

sourceSets { // (5)
	main.java.srcDir querydslDir
}

configurations { // (6)
	compileOnly {
		extendsFrom annotationProcessor
	}
	querydsl.extendsFrom compileClasspath
}

compileQuerydsl { // (7)
	options.annotationProcessorPath = configurations.querydsl
}